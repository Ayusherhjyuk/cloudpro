name: Local CI/CD with Minikube + LocalStack

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      # 1. Start Minikube
      - name: Start Minikube
        uses: medyagh/setup-minikube@master
        with:
          driver: docker

      # 2. Use Minikube's Docker
      - name: Point Docker to Minikube
        run: eval $(minikube docker-env)

      # 3. Build Docker image
      - name: Build Processor Image
        run: docker build -t s3-processor:latest .

      # 4. Deploy LocalStack
      - name: Deploy LocalStack
        run: kubectl apply -f k8s/localstack.yaml

      # 5. Wait for LocalStack ready
      - name: Wait for LocalStack
        run: kubectl wait --for=condition=ready pod -l app=localstack --timeout=120s

      # 6. Deploy CronJob
      - name: Deploy CronJob
        run: kubectl apply -f k8s/cronjob.yaml

      # 7. Run Job manually for testing
      - name: Run Test Job
        run: |
          kubectl delete job test-job --ignore-not-found
          kubectl create job --from=cronjob/s3-processor-cron test-job

      # 8. Wait for Job to complete
      - name: Wait for Job Completion
        run: kubectl wait --for=condition=complete job/test-job --timeout=120s

      # 9. Get Logs
      - name: Fetch Job Logs
        run: kubectl logs -l job-name=test-job --tail=100

      # 10. Verify Output (download file from LocalStack)
      - name: Check Output in S3
        run: |
          kubectl exec -it $(kubectl get pod -l app=localstack -o jsonpath='{.items[0].metadata.name}') \
            -- awslocal s3 ls s3://processed-data/
