name: Local CI/CD with Minikube + LocalStack

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      # 1. Start Minikube
      - name: Start Minikube
        uses: medyagh/setup-minikube@master
        with:
          driver: docker

      # 2. Point Docker to Minikube
      - name: Set up Docker with Minikube
        run: |
          eval $(minikube docker-env)
          docker build -t s3-processor:latest .

      # 3. Deploy LocalStack
      - name: Deploy LocalStack
        run: |
          kubectl apply -f k8s/localstack-deployment.yaml
          kubectl apply -f k8s/localstack-service.yaml

      # 4. Wait for LocalStack pod ready
      - name: Wait for LocalStack Ready
        run: kubectl wait --for=condition=ready pod -l app=localstack --timeout=300s

      # 5. Create S3 buckets
      - name: Create Buckets
        run: |
          POD=$(kubectl get pod -l app=localstack -o jsonpath='{.items[0].metadata.name}')
          kubectl exec -i $POD -- awslocal s3 mb s3://raw-data || true
          kubectl exec -i $POD -- awslocal s3 mb s3://processed-data || true

      # 6. Upload sample input
      - name: Upload Sample Input
        run: |
          POD=$(kubectl get pod -l app=localstack -o jsonpath='{.items[0].metadata.name}')
          kubectl cp data/sample_input_data.csv $POD:/tmp/sample_input_data.csv
          kubectl exec -i $POD -- awslocal s3 cp /tmp/sample_input_data.csv s3://raw-data/input.csv

      # 7. Deploy CronJob
      - name: Deploy CronJob
        run: kubectl apply -f k8s/cronjob.yaml

      # 8. Run Job manually for testing
      - name: Run Test Job
        run: |
          kubectl delete job test-job --ignore-not-found
          kubectl create job --from=cronjob/s3-processor-cron test-job

      # 9. Debug Pods
      - name: Debug Pods
        run: kubectl get pods -o wide

      # 10. Wait for Job completion
      - name: Wait for Job Completion
        run: kubectl wait --for=condition=complete job/test-job --timeout=300s

      # 11. Fetch Job Logs
      - name: Fetch Job Logs
        run: kubectl logs -l job-name=test-job --tail=100

      # 12. Verify output file in LocalStack
      - name: Verify Output in Processed Bucket
        run: |
          POD=$(kubectl get pod -l app=localstack -o jsonpath='{.items[0].metadata.name}')
          kubectl exec -i $POD -- awslocal s3 ls s3://processed-data/
 
            # 13. Download processed output locally
      - name: Download Processed Output
      run: |
        POD=$(kubectl get pod -l app=localstack -o jsonpath='{.items[0].metadata.name}')
        kubectl exec -i $POD -- awslocal s3 cp s3://processed-data/output.csv /tmp/output.csv || true
        kubectl cp $POD:/tmp/output.csv /tmp/output.csv || true


      # 14. Upload as GitHub Actions artifact
      - name: Upload Output Artifact
        uses: actions/upload-artifact@v4
        with:
          name: processed-output
          path: /tmp/output.csv
