name: Local CI/CD with Minikube + LocalStack

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      # 1. Start Minikube
      - name: Start Minikube
        uses: medyagh/setup-minikube@master
        with:
          driver: docker

      # 2. Use Minikube's Docker
      - name: Point Docker to Minikube
        run: eval $(minikube docker-env)

      # 3. Build Docker image
      - name: Build Processor Image
        run: docker build -t s3-processor:latest .

      # 4. Deploy LocalStack Deployment + Service
      - name: Deploy LocalStack
        run: |
          kubectl apply -f k8s/localstack-deployment.yaml
          kubectl apply -f k8s/localstack-service.yaml

      # 5. Wait for LocalStack pod ready
      - name: Wait for LocalStack Ready
        run: kubectl wait --for=condition=ready pod -l app=localstack --timeout=300s


      # 6. Create S3 buckets
      - name: Create Buckets
        run: |
          POD=$(kubectl get pod -l app=localstack -o jsonpath='{.items[0].metadata.name}')
          kubectl exec -i $POD -- awslocal s3 mb s3://raw-data || true
          kubectl exec -i $POD -- awslocal s3 mb s3://processed-data || true

      # 7. Upload sample input
      - name: Upload Sample Input
        run: |
          POD=$(kubectl get pod -l app=localstack -o jsonpath='{.items[0].metadata.name}')
          kubectl cp data/sample_input_data.csv $POD:/tmp/sample_input_data.csv
          kubectl exec -i $POD -- awslocal s3 cp /tmp/sample_input_data.csv s3://raw-data/input.csv

      # 8. Deploy CronJob
      - name: Deploy CronJob
        run: kubectl apply -f k8s/cronjob.yaml

      # 9. Run Job manually for testing
      - name: Run Test Job
        run: |
          kubectl delete job test-job --ignore-not-found
          kubectl create job --from=cronjob/s3-processor-cron test-job

      - name: Debug Pods
        run: kubectl get pods -o wide


      # 10. Wait for Job completion
      - name: Wait for Job Completion
        run: kubectl wait --for=condition=complete job/test-job --timeout=60s

      # 11. Fetch Job Logs
      - name: Fetch Job Logs
        run: kubectl logs -l job-name=test-job --tail=100

      # 12. Verify output file in LocalStack
      - name: Verify Output in Processed Bucket
        run: |
          POD=$(kubectl get pod -l app=localstack -o jsonpath='{.items[0].metadata.name}')
          kubectl exec -i $POD -- awslocal s3 ls s3://processed-data/
